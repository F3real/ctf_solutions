from z3 import *

def BitVecVector(prefix, sz, N):
  """Create a vector with N Bit-Vectors of size sz"""
  return [ BitVec('%s__%s' % (prefix, i), sz) for i in range(N) ]
  
x = BitVecVector('x', 32, 40)

s = Solver()

for i in range(40):
    s.add(x[i] >= 0, x[i] <= 500)

s.add((x[37] - x[37]) * x[15] == 0)
s.add((x[3] + x[31]) ^ (x[29] + x[8]) == 234)
s.add((x[32] - x[12]) * x[9] == -2332)
s.add((x[24] - x[27] + x[13]) ^ x[6] == 114)
s.add((x[38] - x[15]) * x[33] == 800)
s.add((x[34] - x[21]) * x[26] == 98)
s.add((x[29] + x[0]) ^ (x[8] + x[38]) == 248)
s.add((x[21] * x[18]) ^ (x[7] - x[15]) == 2694)
s.add((x[28] * x[23]) ^ (x[19] - x[5]) == -9813)
s.add((x[34] + x[30]) ^ (x[37] + x[6]) == 72)
s.add((x[23] - x[22]) * x[12] == 4950)
s.add((x[9] * x[28]) ^ (x[20] - x[11]) == 5143)
s.add((x[2] * x[22]) ^ (x[37] - x[0]) == 2759)
s.add((x[26] - x[12]) * x[3] == -3350)
s.add((x[35] * x[0]) ^ (x[23] - x[21]) == 2698)
s.add((x[20] + x[31]) ^ (x[5] + x[10]) == 22)
s.add((x[31] * x[19]) ^ (x[1] - x[2]) == -2655)
s.add((x[38] - x[14]) * x[18] == 55)
s.add((x[29] - x[19] + x[10]) ^ x[2] == 93)
s.add((x[13] - x[25] + x[30]) ^ x[29] == 13)
s.add((x[35] + x[33]) ^ (x[26] + x[21]) == 249)
s.add((x[17] + x[24]) ^ (x[34] + x[1]) == 253)
s.add((x[32] - x[35] + x[19]) ^ x[1] == 0)
s.add((x[22] - x[11] + x[3]) ^ x[31] == 113)
s.add((x[19] - x[0]) * x[13] == 108)
s.add((x[19] - x[17]) * x[14] == -2475)
s.add((x[31] - x[35] + x[16]) ^ x[19] == 84)
s.add((x[24] * x[27]) ^ (x[35] - x[17]) == -5792)
s.add((x[11] * x[35]) ^ (x[15] - x[28]) == -2845)
s.add((x[18] - x[19] + x[31]) ^ x[5] == 112)
s.add((x[20] - x[6]) * x[10] == -3933)
s.add((x[39] - x[33]) * x[6] == 3075)
s.add((x[22] + x[1]) ^ (x[39] + x[14]) == 211)
s.add((x[37] * x[24]) ^ (x[12] - x[39]) == -5726)
s.add((x[29] + x[3]) ^ (x[8] + x[11]) == 195)
s.add((x[26] * x[7]) ^ (x[10] - x[17]) == -2375)
s.add((x[11] - x[12]) * x[12] == -4653)
s.add((x[13] * x[5]) ^ (x[12] - x[25]) == 3829)
s.add((x[24] * x[0]) ^ (x[13] - x[23]) == -2829)
s.add((x[17] + x[12]) ^ (x[8] + x[14]) == 170)
s.add((x[38] + x[23]) ^ (x[11] + x[1]) == 245)
s.add((x[22] + x[5]) ^ (x[21] + x[24]) == 19)
s.add((x[35] - x[8] + x[21]) ^ x[30] == 85)
s.add((x[18] - x[31] + x[28]) ^ x[29] == 0)
s.add((x[30] * x[35]) ^ (x[27] - x[29]) == 5501)
s.add((x[8] - x[30] + x[16]) ^ x[36] == 81)
s.add((x[13] * x[18]) ^ (x[35] - x[38]) == -2971)
s.add((x[27] - x[14]) * x[39] == 5875)
s.add((x[34] - x[33]) * x[6] == -6027)
s.add((x[38] * x[1]) ^ (x[20] - x[10]) == -2915)
s.add((x[1] - x[1]) * x[3] == 0)
s.add((x[36] - x[20]) * x[8] == 2640)
s.add((x[23] - x[11] + x[17]) ^ x[33] == 246)
s.add((x[13] - x[38]) * x[0] == -100)
s.add((x[28] - x[14]) * x[31] == 2142)
s.add((x[26] + x[15]) ^ (x[13] + x[31]) == 8)
s.add((x[36] - x[15]) * x[17] == 5238)
s.add((x[16] - x[30]) * x[33] == 0)
s.add((x[2] - x[20] + x[13]) ^ x[6] == 76)
s.add((x[10] - x[14] + x[31]) ^ x[13] == 3)
s.add((x[0] * x[10]) ^ (x[14] - x[31]) == 2854)
s.add((x[28] - x[34] + x[14]) ^ x[14] == 82)
s.add((x[28] - x[25]) * x[1] == 2444)
s.add((x[34] - x[12]) * x[25] == -2400)
s.add((x[28] * x[38]) ^ (x[17] - x[4]) == 5429)
s.add((x[21] - x[21] + x[26]) ^ x[23] == 84)
s.add((x[9] - x[4] + x[18]) ^ x[35] == 47)
s.add((x[28] - x[21] + x[1]) ^ x[33] == 0)
s.add((x[24] - x[25] + x[22]) ^ x[0] == 8)
s.add((x[28] - x[25]) * x[12] == 4653)
s.add((x[1] * x[15]) ^ (x[10] - x[8]) == 2498)
s.add((x[5] * x[7]) ^ (x[15] - x[34]) == -3429)
s.add((x[8] * x[3]) ^ (x[23] - x[22]) == 3671)
s.add((x[25] - x[33]) * x[11] == -2600)
s.add((x[21] + x[12]) ^ (x[37] + x[28]) == 81)
s.add((x[30] + x[33]) ^ (x[34] + x[14]) == 162)
s.add((x[6] - x[25]) * x[8] == 4015)
s.add((x[24] - x[7] + x[12]) ^ x[7] == 90)
s.add((x[18] * x[12]) ^ (x[8] - x[4]) == -5466)
s.add((x[32] * x[7]) ^ (x[32] - x[27]) == -2730)
s.add((x[32] * x[34]) ^ (x[29] - x[16]) == 2804)
s.add((x[25] * x[22]) ^ (x[28] - x[39]) == -2542)
s.add((x[8] - x[15]) * x[6] == 861)
s.add((x[20] + x[18]) ^ (x[25] + x[36]) == 245)
s.add((x[5] - x[28] + x[14]) ^ x[39] == 97)
s.add((x[30] * x[11]) ^ (x[16] - x[11]) == 5216)
s.add((x[11] + x[18]) ^ (x[7] + x[9]) == 13)
s.add((x[9] - x[2]) * x[30] == -200)
s.add((x[12] + x[37]) ^ (x[9] + x[4]) == 78)
s.add((x[10] - x[37]) * x[38] == -2408)
s.add((x[5] * x[19]) ^ (x[20] - x[21]) == 3645)
s.add((x[27] * x[29]) ^ (x[39] - x[21]) == 10354)
s.add((x[15] * x[32]) ^ (x[7] - x[22]) == -2642)
s.add((x[1] - x[3] + x[24]) ^ x[31] == 25)
s.add((x[13] - x[0]) * x[30] == 400)
s.add((x[18] - x[15] + x[36]) ^ x[28] == 12)
s.add((x[34] + x[21]) ^ (x[12] + x[37]) == 163)
s.add((x[36] - x[33]) * x[14] == 110)
s.add((x[2] - x[3]) * x[3] == -804)
s.add((x[35] - x[27] + x[22]) ^ x[4] == 80)
s.add((x[10] + x[9]) ^ (x[17] + x[2]) == 246)
s.add((x[25] * x[4]) ^ (x[27] - x[23]) == 4201)
s.add((x[32] * x[19]) ^ (x[3] - x[25]) == 2877)
s.add((x[37] - x[14]) * x[23] == 4545)
s.add((x[32] + x[13]) ^ (x[31] + x[32]) == 7)
s.add((x[11] - x[25]) * x[39] == 250)
s.add((x[17] + x[31]) ^ (x[6] + x[9]) == 36)
s.add((x[4] + x[27]) ^ (x[2] + x[31]) == 208)
s.add((x[6] + x[7]) ^ (x[26] + x[21]) == 206)
s.add((x[19] + x[25]) ^ (x[22] + x[10]) == 10)
s.add((x[34] + x[2]) ^ (x[8] + x[26]) == 2)
s.add((x[7] + x[5]) ^ (x[12] + x[14]) == 237)
s.add((x[1] - x[13]) * x[38] == -112)
s.add((x[0] - x[19] + x[16]) ^ x[0] == 80)
s.add((x[31] + x[36]) ^ (x[3] + x[2]) == 227)
s.add((x[32] - x[3] + x[26]) ^ x[4] == 113)
s.add((x[3] * x[6]) ^ (x[16] - x[27]) == -8241)
s.add((x[24] + x[15]) ^ (x[2] + x[30]) == 242)
s.add((x[11] + x[21]) ^ (x[31] + x[20]) == 12)
s.add((x[9] - x[26] + x[23]) ^ x[30] == 13)
#print(s.sexpr())

if s.check() == sat:
  print(s.model())
else:
  print('unsat')